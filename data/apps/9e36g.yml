version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: 2fauth
      POSTGRES_USER: 2fauth
      POSTGRES_PASSWORD: change_this_password
    volumes:
      - db-data:/var/lib/postgresql2
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U 2fauth"]
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:6-alpine
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -h 127.0.0.1 ping"]
      timeout: 5s
      retries: 5

  # 2FAuth Application Server
  app:
    image: 2fauth/2fauth
    ports:
      - "8000:80"
    environment:
      DB_HOST: db
      REDIS_HOST: redis
      SECRET_KEY: change_this_secret
      DEFAULT_REALM: example.com
      OIDC_ISSUER: https://example.com/auth
      LOG_LEVEL: info
    depends_on:
      - db
      - redis
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/health"]
      timeout: 10s
      retries: 5

  # OAuth2 Proxy (Optional, if you want to use it as an OAuth2/OpenID Connect Identity Provider)
  oauth2_proxy:
    image: oauth2-proxy/oauth2-proxy:4.6.0
    ports:
      - "4180:4180"
    environment:
      PROXY_UPSTREAM_INBOUND_NAME: provider
      JWT_SECRET: change_this_secret
      OIDC_ISSUER: https://example.com/auth
      SERVICE_DOMAIN: example.com
      MODE: provider
    depends_on:
      - app

volumes:
  db-data: