version: '3.7'

services:
  coder:
    image: coder.com/coder/coder:latest # or a specific version like coder.com/coder/coder:2.5.0
    container_name: coder
    ports:
      - "80:80" # Host to Container
    environment:
      CODER_SKIP_EULA: "true" # Skip the End User License Agreement on first run
      # Optionally, you can set a CODESPACE_NAME variable here or in the Docker volume for a custom workspace name
    volumes:
      - ./coder-data:/root/.local/share/io.codestrategy/coder
      - coder-auth:/var/lib/coder-auth

  postgres:
    image: postgres:latest # or a specific version like postgres:13
    volumes:
      - coder-auth:/var/lib/postgresql

# NGINX Proxy Manager service (optional, for ingress and reverse proxy)
nginx_proxy:
  image: nginxpm/nginx-proxy:stable
  container_name: nginx-proxy
  ports:
    - "80:80" # HTTP
    - "443:443" # HTTPS (requires a TLS certificate)
  volumes:
    - ./certs/nginx.crt:/etc/nginx/ssl/nginx.crt
    - ./certs/nginx.key:/etc/nginx/ssl/nginx.key
    - nginx-proxy_data:/var/lib/nginx-proxy
  depends_on:
    - coder

# Optional Certbot container to automate TLS certificates (if using NGINX Proxy Manager)
certbot:
  image: certbot/certbot:latest # or a specific version like certbot/certbot:1.24.0
  volumes:
    - ./certs:/etc/letsencrypt
  depends_on:
    - nginx_proxy

volumes:
  coder-auth:
  coder-data:
  nginx-proxy_data: