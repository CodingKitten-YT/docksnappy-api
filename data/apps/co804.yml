version: '3.7'
services:
  misskey:
    image: 'misskey/misskey:latest' # Use the official Misskey image or specify a tag
    container_name: 'misskey'
    ports:
      - '9090:9090' # Misskey web interface
      - '8080:8080' # Admin API (if you need it)
      - '3000:3000' # ActivityPub endpoint for federation
    volumes:
      - './misskey/:./misskey/' # User data and configuration, set according to your setup
      - './misskey/redis-data:/data/redis' # Redis data (optional if you don't mind losing it on restart)
      - './misskey/mcs-data:/data/mcs' # MCS (Markdown Cache Service) data (optional, for better performance)
    environment:
      MISSKEY_SECRET: 'your_secret_token' # Set a secret token for additional security
      MISSKEY_SITE_NAME: 'Your Misskey Instance Name' # Your instance name
      MISSKEY_EMAIL: 'admin@example.com' # Email for admin account
      MISSKEY_ADMIN_PASSWORD: 'your_password' # Password for the admin account
      MISSKEY_TIMEZONE: 'Asia/Tokyo' # Timezone (e.g., Asia/Tokyo)
      JWT_SECRET: 'jwt_secret_token' # JWT token for authentication
      REDIS_HOST: 'redis' # If you are using a separate Redis service, set this to the service name
      DB_TYPE: 'postgres' # Database type (postgres or mysql)
      POSTGRES_DB: 'misskey' # Database name if using PostgreSQL
      POSTGRES_USER: 'misskey' # Database user if using PostgreSQL
      POSTGRES_PASSWORD: 'your_password' # Database password if using PostgreSQL
      MYSQL_DATABASE: 'misskey' # Database name if using MySQL
      MYSQL_USER: 'misskey' # Database user if using MySQL
      MYSQL_PASSWORD: 'your_password' # Database password if using MySQL
    depends_on:
      - redis
      - db
    restart: unless-stopped

  redis:
    image: 'redis:6-alpine'
    volumes:
      - './misskey/redis-data:/data' # Persist Redis data (optional for ephemeral data)
    environment:
      REDIS_PASSWORD: 'your_password' # Set a password for Redis if desired
    healthcheck:
      test: ["CMD", "REDIS-CLI", "PING", "exit"]
      timeout: 5s
      interval: 10s
      retries: 10

  db:
    image: 'postgres:13' # Use the specific version you prefer (e.g., postgres:14)
    volumes:
      - './misskey/db-data:/var/lib/postgresql/data' # Persist PostgreSQL data
    environment:
      POSTGRES_DB: 'misskey'
      POSTGRES_USER: 'misskey'
      POSTGRES_PASSWORD: 'your_password'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U misskey"]
      timeout: 5s
      interval: 10s
      retries: 10

# Uncomment the following service if you need an email server like Postfix or Mailu for sending emails.
# mailhog:
#   image: 'mailhog/mailhog'
#   ports:
#     - '8025:8025' # SMTP interface
#     - '8000-8003:8000-8003' # Web UI