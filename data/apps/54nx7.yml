version: '3.8'

services:
  paperless:
    image: paperless-ngx:latest  # or use a specific tag if needed
    container_name: paperless-ngx
    volumes:
      - paperless-conf:/config:ro
      - paperless-data:/data
      - paperless-letters:/data/incoming:z
    ports:
      - "61201:61201"  # HTTP interface on port 61201
      - "61202:61202"  # HTTPS interface on port 61202
    environment:
      PAPERLESS_USERNAME: your_username
      PAPERLESS_PASSWORD: your_password
      TZ: 'America/New_York'  # Set to your timezone
    depends_on:
      - postgres

  postgres:
    image: postgres:latest  # or use a specific tag if needed
    volumes:
      - paperless-db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: paperless_main
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless_password

  httpd:
    image: httpd:latest  # or use a specific tag if needed
    volumes:
      - paperless-letters:/var/www/html
      - static-files:/var/www/html/static-files:ro
    ports:
      - "80:80"
    depends_on:
      - web:web

  web:web:
    image: jrburke/gunicorn-flask:latest  # or use a specific tag if needed
    volumes:
      - .:/app
      - static-files:/app/static-files
    environment:
      FLASK_APP: paperless:app
      FLASK_RUN_HOST: 0.0.0.0
      FLASK_RUN_PORT: 5000
    ports:
      - "5000:5000"
    depends_on:
      - postgres

  # Optional service for a static files volume if you want to serve files directly from Docker without needing a web server.
  # This can be omitted if you are using the HTTPD container to serve static files.
  static-files:
    image: registry.gitlab.com/lib/mini-httpd:latest  # or use a specific tag if needed
    volumes:
      - .:/app
      - static-files:/static-files
      - paperless-conf:/config
    entrypoint: "/usr/bin/httpd -DFOREGROUND"

volumes:
  paperless-conf:
  paperless-data:
  paperless-db:
    driver: postgres
  static-files:

networks:
  default:
    driver: bridge