version: '3'

services:
  appwrite:
    image: appwrite/echo
    container_name: appwrite
    ports:
      - "8080:8080" # Admin Interface (Echo UI)
      - "9000:9000" # Realtime Subscriptions
      - "80:80"     # HTTP API (Configurable via environment variable APPWRITE_HTTP_PORT)
    volumes:
      - "./appwrite-config:/appwrite/config"
      - "./appwrite-data:/appwrite/data"
    environment:
      - APPWRITE_CLUSTER=true
      - APPWRITE_REDIS_HOST=redis
      - APPWRITE_DB_ENDPOINT=postgres
      - APPWRITE_DB_USERNAME=appwrite
      - APPWRITE_DB_PASSWORD=appwrite
      # Optionally, you can set the HTTP_PORT environment variable to customize the port for the Appwrite HTTP API
    depends_on:
      - redis
      - postgres
    command: sh -c "trap exit TERM; while :; do sleep 1 & wait $${!}; done; exec appwrite-ectd"

  redis:
    image: redis:6.0-alpine
    command: redis-server --appendonly yes
    volumes:
      - "./appwrite-data/redis:/data"

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_DB=appwrite
      - POSTGRES_USER=appwrite
      - POSTGRES_PASSWORD=appwrite
    volumes:
      - "./appwrite-data/postgres:/var/lib/postgresql/data"

  mongodb:
    image: mongo:4.4
    volumes:
      - "./appwrite-data/mongodb:/data/db"

  filesystem-storage:
    image: appwrite/filesystem-storage
    container_name: appwrite_filesystem_storage
    volumes:
      - "./appwrite-data/filesystem-storage:/appwrite/data"

networks:
  default:
    driver: bridge