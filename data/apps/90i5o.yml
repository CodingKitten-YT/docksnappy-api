version: '3.8'

services:
  karaoke-app:
    image: karaoke_eternal:latest
    ports:
      - "3000:3000" # HTTP port
    environment:
      NODE_ENV: development
    volumes:
      - .:/src
      - /tmp/cache:/tmp/cache
    depends_on:
      - redis
      - postgres

  redis:
    image: redis:6-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data

  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: karaoke_eternal
      POSTGRES_USER: karaokeuser
      POSTGRES_PASSWORD: karaokepassword
    volumes:
      - postgres-data:/var/lib/postgresql/data

  # Optional: If the application uses a queue, you might need a service like RabbitMQ or AWS SQS
  queue:
    image: rabbitmq:3-management
    ports:
      - "5672:5672" # AMQP port
      - "15672:15672" # Management UI port
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

volumes:
  redis-data:
  postgres-data:
  rabbitmq-data:

networks:
  default:
    driver: bridge