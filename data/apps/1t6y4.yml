version: '3.8'

services:
  shynet_api:
    image: 'shynet/shynet:latest' # Use the official Shynet API Docker image
    ports:
      - "8000:80" # Expose the default port of Shynet API (you can change it according to your needs)
    environment:
      JWT_SECRET: 'your_jwt_secret' # Set a secret key for JWT authentication
      DATABASE_URL: 'postgres://shynet_db:shynet_db@database:5432/shynet?sslmode=disable' # Database service connection string
      REDIS_URL: 'redis:6379' # Redis service connection string (if not using the default port)
      # Add other necessary environment variables
    depends_on:
      - database
      - redis
      - event_bus
    volumes:
      - './shynet_api:/app' # Mount your local Shynet API code to the container for customizations

  shynet_db:
    image: 'postgres:13'
    environment:
      POSTGRES_DB: 'shynet'
      POSTGRES_USER: 'shynet_db'
      POSTGRES_PASSWORD: 'shynet_db'
    volumes:
      - './data/postgres:/var/lib/postgresql/data' # Persist database data

  redis:
    image: 'redis:6'
    ports:
      - "6379:6379" # Optional, expose Redis port if you need to access it from the host

  event_bus:
    image: 'shynet/event-bus:latest' # Use the official Shynet Event Bus Docker image
    ports:
      - "8001:80" # Expose the default port of Shynet Event Bus (you can change it according to your needs)
    environment:
      JWT_SECRET: 'your_jwt_secret' # Use the same secret key as Shynet API for consistency
    depends_on:
      - database

  shynet_monitoring_prometheus:
    image: 'shynet/prometheus-monitoring:latest' # Optional service for monitoring with Prometheus
    ports:
      - "9090:9090"
    environment:
      MONITORING_JWT_SECRET: 'your_jwt_secret'
    depends_on:
      - shynet_api

  shynet_monitoring_grafana:
    image: 'shynet/prometheus-monitoring-grafana:latest' # Optional service for visualization with Grafana
    ports:
      - "3000:3000"
    environment:
      MONITORING_JWT_SECRET: 'your_jwt_secret'
    depends_on:
      - shynet_api
      - shynet_monitoring_prometheus

# Uncomment the following if you need to use a message broker like RabbitMQ or Kafka
# shynet_message_broker:
#   image: 'rabbitmq:3.8-management' # Or 'confluentinc/cp-kafka:latest' for Kafka
#   ports:
#     - "5672:5672" # RabbitMQ default port or Kafka Zookeeper port if using Kafka
#   environment:
#     # Set necessary environment variables for your message broker
#   expose:
#     - "5672" # RabbitMQ default port or Kafka advertised listener port

# Note: This docker-compose.yml assumes that you are running Shynet in a local development environment.
# For production use, consider using Docker Swarm or Kubernetes, and ensure proper security practices are followed.