version: '3.8'

services:
  mobilizon:
    image: 'mobilizon/mobilizon:latest' # Use a specific tag if needed
    container_name: mobilizon
    command: celery -A mobilizon worker --loglevel=info
    environment:
      DJANGO_SETTINGS_MODULE: mobilizon.settings.prod
      REDIS_URL: 'redis://{redis_host}:6379/{mobilizon_id}'
      BROKER_URL: 'redis://{redis_host}:6379/{mobilizon_id}'
      CELERY_RESULT_BACKEND: 'redis://{redis_host}:6379/{mobilizon_id}'
      POSTGRES_DB: mobilizon
      POSTGRES_USER: mobilizon
      POSTGRES_PASSWORD: '{postgres_password}' # Replace with your password or use an environment variable for security
      SECRET_KEY: '{secret_key}' # Replace with your secret key or use an environment variable for security
      ALLOWED_HOSTS: '*'
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - postgres
      - fileserver
    volumes:
      - ./mobilizon/data:/data
      - ./mobilizon/static:/var/www/.userpack
      - ./mobilizon/media:/var/www/media

  redis:
    image: 'redis:6'
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  postgres:
    image: 'postgres:13'
    environment:
      POSTGRES_DB: mobilizon
      POSTGRES_USER: mobilizon
      POSTGRES_PASSWORD: '{postgres_password}' # Replace with your password or use an environment variable for security
    volumes:
      - postgres_data:/var/lib/postgresql/data

  fileserver:
    image: 'django-nonclustered/ncs-fileserver'
    command: ['--project=mobilizon', '--drop-to-media=True', '--store-media-root=/var/www/media']
    volumes:
      - ./mobilizon/static:/var/www/.userpack
      - ./mobilizon/media:/var/www/media

  nginx:
    image: 'nginx:latest'
    container_name: nginx
    command: 'nginx -g "daemon off;"'
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./mobilizon/static:/var/www/.userpack
      - nginx_conf.conf:/etc/nginx/conf.d/default.conf
      - ./mobilizon/certbot.conf:/etc/letsencrypt/renewal/mobilizon.conf
    depends_on:
      - mobilizon
    networks:
      - backend_network

  certbot:
    image: 'certbot/certbot'
    volumes:
      - ./mobilizon/static:/var/www/.userpack
      - ./mobilizon/certbot.conf:/etc/letsencrypt/renewal/mobilizon.conf
      - certbot_data:/etc/letsencrypt

networks:
  backend_network:
    driver: bridge

volumes:
  mobilizon_data:
  postgres_data:
  redis_data:
  certbot_data: