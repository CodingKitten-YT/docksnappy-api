version: '3'

services:
  # Nginx with Let's Encrypt for SSL (optional, if you want HTTPS)
  webserver:
    image: nginx:latest
    ports:
      - "80:80"          # HTTP
      - "443:443"         # HTTPS (if you enable Let's Encrypt)
    volumes:
      - "./data/nginx.conf:/etc/nginx/nginx.conf:ro"  # Custom Nginx configuration
      - "./data/ssl:/etc/letsencrypt"                  # Optional, for Let's Encrypt certificates and data
      - "./src:/var/www/html"                           # Your Vvveb CMS files
    depends_on:
      - php
      - database
    networks:
      - vvveb-network

  # PHP-FPM (FastCGI Process Manager)
  php:
    image: php:7.4-fpm
    volumes:
      - "./src:/var/www/html"                           # Your Vvveb CMS files
      - "vvveb-data:/var/www/html"                       # Persistent storage for PHP data
    networks:
      - vvveb-network

  # MariaDB (MySQL compatible)
  database:
    image: mariadb:latest
    volumes:
      - "vvveb-data:/var/lib/mysql"                     # Persistent storage for database data
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: vvveb
      MYSQL_USER: vvvebuser
      MYSQL_PASSWORD: dbpassword
    networks:
      - vvveb-network

# Volumes for persistent data
volumes:
  vvveb-data:
    driver: local

# Networks for inter-container communication (optional, Docker's default network is used if not defined)
networks:
  vvveb-network:
    driver: bridge

# Optional services for Let's Encrypt (Certificate Authority for HTTPS)
services_http:
  certbot:
    image: certbot/certbot
    volumes:
      - "./data/ssl:/etc/letsencrypt"
      - "./src:/var/www/html"
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

# To use Let's Encrypt with this setup, you need to expose ports 80 and 443, and run the Certbot container.
# You also need to obtain a temporary admin account from certbot via their staging environment to authorize your domain(s).