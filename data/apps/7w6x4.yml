version: '3.8'
services:
  audiobookshelf:
    image: audiobookshelf/audiobookshelf:latest
    container_name: audiobookshelf
    ports:
      - "8000:8000" # HTTP interface, change if you want to use a different host port
    volumes:
      - "./audiobookshelf:/data" # Path to your local data, where Audiobookshelf will store its files. Make sure this directory exists and has the necessary permissions.
      - audiobookshelf_media:/media     # Media storage
    environment:
      - TZ=Europe/London  # Timezone, change to your local timezone if needed
      - USER=user           # Default user, you can change this to any username you prefer
      - PGID=100             # Default user's group ID
      - PGDG=100             # Default user's primary group ID
    restart: unless-stopped
    networks:
      - audiobookshelf_network

volumes:
  audiobookshelf_media:

networks:
  audiobookshelf_network:

# Optionally, you can define a 'db' service if you want to run PostgreSQL separately:
# db:
#   image: postgres:latest
#   volumes:
#     - postgres_data:/var/lib/postgresql/data
#   environment:
#     POSTGRES_DB: audiobookshelf
#     POSTGRES_USER: user
#     POSTGRES_PASSWORD: password
#   restart: unless-stopped
#   healthcheck:
#     test: ["CMD", "pg_isready", "-U", "user"]
#     interval: 10s
#     timeout: 5s
#     retries: 5

# Then, you would need to update the 'audiobookshelf' service to connect to this 'db' service:
#   depends_on:
#     - db
#   environment:
#     DATABASE_URL: postgresql://user:password@db:5432/audiobookshelf

# If you want to use a custom PostgreSQL image, uncomment the 'db' service and update the image name.