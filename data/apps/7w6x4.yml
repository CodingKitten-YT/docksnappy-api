version: '3.8'

services:
  audiobookshelf:
    image: audiobookshelf/audiobookshelf:latest  # Use the latest official release or a specific tag if needed
    container_name: audiobookshelf
    ports:
      - "8000:8000"  # Expose Audiobookshelf's default web interface port (host:container)
    environment:
      - TZ=Europe/London  # Set the timezone, change as needed
      - SECRET_KEY=changeme  # You should set this to a random secret key for security purposes
      - POSTGRES_DB=audiobookshelf  # Database name for PostgreSQL
      - POSTGRES_USER=audiobookshelf  # Username for the PostgreSQL database
      - POSTGRES_PASSWORD=changeme  # Password for the PostgreSQL database
    volumes:
      - ./data:/code/data  # Persist Audiobookshelf data to a host directory (create this directory)
      - ./audiobookshelf.db.sql:/docker-entrypoint-initdb.d/audiobookshelf.db.sql  # Optional: import SQL on first run
    depends_on:
      - postgres

  postgres:
    image: postgres:latest
    container_name: postgres
    volumes:
      - ./data/postgres:/var/lib/postgresql/data  # Persist PostgreSQL data to a host directory (create this directory)
    environment:
      - POSTGRES_DB=audiobookshelf
      - POSTGRES_USER=audiobookshelf
      - POSTGRES_PASSWORD=changeme
    ports:
      - "5432:5432"  # Optional: Expose PostgreSQL port (host:container) for direct database access

  redis:
    image: redis:latest
    container_name: redis

  celery_beat:
    image: audiobookshelf/audiobookshelf:latest
    container_name: audiobookshelf_celery_beat
    command: celery -A audiobookshelf worker --loglevel=info --concurrency=1 --detached
    volumes:
      - ./data:/code/data
    depends_on:
      - postgres
      - audiobookshelf

  celery_worker:
    image: audiobookshelf/audiobookshelf:latest
    container_name: audiobookshelf_celery_worker
    command: celery -A audiobookshelf worker --loglevel=info --concurrency=1 --detached
    volumes:
      - ./data:/code/data
    depends_on:
      - postgres
      - audiobookshelf
      - redis

networks:
  default:
    driver: bridge