version: '3.8'

services:
  hi_events_web:
    image: hi_events_web:latest
    build:
      context: .
      dockerfile: Dockerfile-web
    ports:
      - "5000:80"
    depends_on:
      - hi_events_api
      - hi_events_job_queue
    environment:
      - DOTNET_ENVIRONMENT=Development
    networks:
      - hi-events-network

  hi_events_api:
    image: hi_events_api:latest
    build:
      context: .
      dockerfile: Dockerfile-api
    environment:
      - DOTNET_ENVIRONMENT=Development
      - DATA:/"{ \"connectionStrings\": { \"DefaultConnection\": \"Server=(localdb)\\mssqllocaldb;Database=HiEvents-Dev-Db;Trusted_Connection=True;\""}"
    networks:
      - hi-events-network

  hi_events_job_queue:
    image: hi_events_job_queue:latest
    build:
      context: .
      dockerfile: Dockerfile-job-queue
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=user
      - RABBITMQ_PASS=password
      - DOTNET_ENVIRONMENT=Development
    networks:
      - hi-events-network

  rabbitmq:
    image: rabbitmq:3.8-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USERNAME=user
      - RABBITMQ_DEFAULT_PASSWORD=password
    networks:
      - hi-events-network

  redis:
    image: redis:alpine
    networks:
      - hi-events-network

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=sa
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=HiEvents-Dev-Db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    networks:
      - hi-events-network

volumes:
  postgres-data:

networks:
  hi-events-network:
    driver: bridge