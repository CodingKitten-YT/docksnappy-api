version: '3.8'

services:
  # Dashboard application service
  web:
    image: dashpress/dashpress:latest
    container_name: dashpress_web
    ports:
      - "8000:8000" # HTTP port
    environment:
      DJANGO_SETTINGS_MODULE: dashpress.settings.production
      SECRET_KEY: 'your-secret-key'
      ALLOWED_HOSTS: 'localhost 127.0.0.1 [::1]'
      # Optionally, you can set the following environment variables for additional configurations
      POSTGRES_DB: 'db' # Database name for docker-compose's internal service
      POSTGRES_USER: 'dashpress' # Username for the database
      POSTGRES_PASSWORD: 'dashpresspassword' # Password for the database
    volumes:
      - './data:/code/dashpress/data' # Mount for user-generated content and attachments
      - './media:/code/dashpress/media' # Mount for uploaded files
    depends_on:
      - db
    command: gunicorn dashpress.wsgi --bind 0.0.0.0:8000

  # Database service
  db:
    image: postgres:13
    container_name: dashpress_db
    volumes:
      - './data/db:/var/lib/postgresql/data' # Mount for the database data
    environment:
      POSTGRES_DB: 'dashpress' # Default database name
      POSTGRES_USER: 'dashpress' # Default user
      POSTGRES_PASSWORD: 'dashpresspassword' # Default password

  # Redis cache service (optional, for caching and session handling)
  redis:
    image: redis:6-alpine
    container_name: dashpress_redis
    volumes:
      - './data/redis:/data' # Mount for Redis data persistence

  # Celery worker service (optional, for task queue processing)
  celery_worker:
    image: dashpress/dashpress-celery-worker:latest
    container_name: dashpress_celery_worker
    environment:
      CELERY_BROKER_URL: redis://redis:6379
      CELERY_RESULT_BACKEND: db
    volumes:
      - './data/db:/var/lib/postgresql/data' # Mount for the database data (same as db service)
    depends_on:
      - db
      - redis
    command: celery -A dashpress worker --loglevel=info

  # RabbitMQ for message broker (optional, if you choose to use RabbitMQ instead of Redis)
  # This service setup is commented out by default as it's not part of the standard Dashpress stack.
  # rabbitmq:
  #   image: rabbitmq:3-management
  #   container_name: dashpress_rabbitmq
  #   ports:
  #     - "5672:5672" # RabbitMQ default AMQP port (management UI available on 15672)
  #   environment:
  #     RABBITMQ_DEFAULT_USER: 'admin'
  #     RABBITMQ_DEFAULT_PASS: 'password'
  #   volumes:
  #     - './data/rabbitmq:/var/lib/rabbitmq/mnesia/

networks:
  default:
    driver: bridge