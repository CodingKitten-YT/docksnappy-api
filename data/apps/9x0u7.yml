version: '3.8'
services:
  # Bytebase server service
  bytebase-server:
    image: bytebase/bytebase:v1.0.0  # Replace with the desired version tag
    command: server
    container_name: bytebase_server
    ports:
      - "9090:9090"  # Expose Bytebase web UI on host port 9090
    environment:
      JAVA_TOOL_OPTIONS: -Xms512M -Xmx512M
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 9090
      DATA_DIR: /data/db
    volumes:
      - type: bind
        source: ./data/db
        target: /data/db
        mode: ro
      - type: bind
        source: ./log
        target: /var/log/bytebase
        mode: decked
    depends_on:
      - bytebase-mysql  # Assuming you are using MySQL as the underlying database
    restart: unless-stopped

  # MySQL service (Bytebase backend database)
  bytebase-mysql:
    image: mysql:8.0.23  # Replace with the desired version tag
    command: --default-authentication-plugin=mysql_native_password
    container_name: bytebase_mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: bytebase
      MYSQL_USER: bytebase
      MYSQL_PASSWORD: bonepassword
    volumes:
      - type: bind
        source: ./mysql/db
        target: /var/lib/mysql
        mode: decked
    restart: unless-stopped

  # Nginx service to proxy requests to Bytebase server
  bytebase-proxy:
    image: nginx:latest
    command: -g 'daemon off;'
    container_name: bytebase_proxy
    ports:
      - "80:80"   # Expose Nginx on host port 80 for HTTP traffic
      - "443:443"  # Expose Nginx on host port 443 for HTTPS traffic (requires SSL configuration)
    volumes:
      - type: bind
        source: ./nginx/conf.d
        target: /etc/nginx/conf.d
        mode: decked
    depends_on:
      - bytebase-server
    networks:
      default:
        alias: bytebase_proxy
    restart: unless-stopped

# Configure a custom network for docker containers if needed
networks:
  stone:
    external: true