version: '3.8'

services:
  db:
    image: postgres:13-alpine
    command: 'postgres -c "listen_addresses = '*'"'
    volumes:
      - type: bind
        source: ./data/db
        target: /var/lib/postgresql/data
    environment:
      POSTGRES_DB: homebox
      POSTGRES_USER: homebox
      POSTGRES_PASSWORD: changeit

  redis:
    image: redis:6-alpine
    command: redis-server --appendonly yes

  rabbitmq:
    image: rabbitmq:3.8-management
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password

  hb-worker1:
    image: homebox/homebox-worker:latest
    command: celery -A homebox worker --loglevel=info --concurrency=1
    environment:
      CELERY_BROKER_URL: amqp://rabbitmq:5672//
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      DJANGO_SETTINGS_MODULE: homebox.settings.production
    depends_on:
      - db
      - rabbitmq
      - redis
    command: celery -A homebox worker --loglevel=info --concurrency=1

  hb-worker2:
    image: homebox/homebox-worker:latest
    command: celery -A homebox worker --loglevel=info --concurrency=1
    environment:
      CELERY_BROKER_URL: amqp://rabbitmq:5672//
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      DJANGO_SETTINGS_MODULE: homebox.settings.production
    depends_on:
      - db
      - rabbitmq
      - redis
    command: celery -A homebox worker --loglevel=info --concurrency=1

  hb-web:
    image: homebox/homebox:latest
    ports:
      - "8000:8000"
    environment:
      DJANGO_SETTINGS_MODULE: homebox.settings.production
      SECRET_KEY: changeit
      ALLOWED_HOSTS: '*'
    depends_on:
      - db
      - rabbitmq
      - redis

volumes:
  postgres_data:
    driver: local

networks:
  homebox_net:
    driver: bridge