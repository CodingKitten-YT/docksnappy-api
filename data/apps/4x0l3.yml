iguana-compose.yml
---------------------
version: '3.7'

services:
  iguana:
    image: 'curoverse/ighur:latest' # Use the official Iguana image from Curoverse
    ports:
      - "8080:8080" # Port 8080 is commonly used for web UI access
    environment:
      IGUANA_SITE_SERVER_HOSTNAME: iguanadata # Set the server hostname within Iguana
      JAVA_OPTS: "-Xms512m -Xmx1g" # Set Java heap size for Iguana
    volumes:
      - iguana-data:/data # Persist Iguana data to a named volume
      - ./config:/config # Mount a directory with your configuration files into the Iguana container

  mongodb:
    image: 'mongo:latest' # Use the official MongoDB image
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: your_password # Replace with your password
    volumes:
      - mongodb-data:/data/db # Persist MongoDB data to a named volume
    ports:
      - "27017:27017" # MongoDB default port

  elasticsearch:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:latest' # Use the official Elasticsearch image
    environment:
      discovery.type: single-node # For testing purposes, use single-node configuration
    ports:
      - "9200:9200" # Elasticsearch default port for HTTP
      - "9300:9300" # Elasticsearch default port for transport (internal coordination)

volumes:
  iguana-data:
  mongodb-data:

networks:
  iguananetwork:
    driver: bridge

# Optional, if you want to define a custom network for your services
networks:
  iguananetwork:
    driver: bridge

# Note: This docker-compose.yml assumes that Iguana is configured to use MongoDB and Elasticsearch.
# Make sure to replace 'your_password' with a secure password of your choice for MongoDB.
# Also, the volume mount for './config' should point to a directory on your host machine where you have stored your Iguana configuration files.
# The `discovery.type: single-node` setting for Elasticsearch is suitable for testing but not for production use.
# For production, you would typically configure a proper Elasticsearch cluster with at least three nodes.