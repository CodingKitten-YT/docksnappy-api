version: '3.8'
services:
  rsshub:
    image: rssbutler/rsshub:latest # Use the official rssbutler/rsshub image
    container_name: rsshub
    ports:
      - "5000:5000" # Expose RSSHub's default port for web interface and health check
    volumes:
      - "./data:/data" # Mount a volume to persist data (optional, but recommended)
      - "./config:/config" # Mount a volume for configuration files (optional)
      - "./logs:/logs" # Mount a volume for log files (optional)
    environment:
      RSSHUB_NO_UPLOAD: "true" # Disable upload functionality if not needed
      RSSHUB_API_TOKEN: "<your_api_token>" # Set an API token for API access (if needed)
    command: webserver # Start RSSHub in web server mode by default
    restart: unless-stopped # Ensure RSSHub restarts on failure or system reboot

  rsshub-postgres:
    image: postgres:latest # Use the official PostgreSQL image
    container_name: rsshub_postgres
    command: 'pg_ctl -l logfile -o -c -b fast -E UTF8 -a 0 -x'
    volumes:
      - "./data/db:/var/lib/postgresql/data" # Persist database data
    environment:
      POSTGRES_DB: "rsshub" # Database name for RSSHub
      POSTGRES_USER: "rsshub" # Username for the database
      POSTGRES_PASSWORD: "<your_password>" # Password for the database
    ports:
      - "5432:5432" # Expose PostgreSQL's default port (optional, if you want to access it from the host)
    restart: unless-stopped # Ensure PostgreSQL restarts on failure or system reboot

  rsshub-redis:
    image: redis:latest # Use the official Redis image
    container_name: rsshub_redis
    volumes:
      - "./data/redis:/data" # Persist Redis data
    restart: unless-stopped # Ensure Redis restarts on failure or system reboot

networks:
  default:
    driver: bridge