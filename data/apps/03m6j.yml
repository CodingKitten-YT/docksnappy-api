version: '3.8'

services:
  anycable_gateway:
    image: anycable/anycable-gateway:latest
    command: -e 'LISTEN_ADDRESS=0.0.0.0'
    ports:
      - "4000:4000" # Subscription cable server port
    environment:
      - DB_HOST=postgres_1 # Assuming a linked PostgreSQL service with the alias 'postgres_1'
      - DB_USER=anycable       # Database user for AnyCable
      - DB_PASSWORD=anycabledb   # Database password for AnyCable
      - DB_DATABASE=anycable     # Database name for AnyCable
      - DB_PORT=5432             # PostgreSQL port (default is 5432)
      - REDIS_HOST=redis_1      # Assuming a linked Redis service with the alias 'redis_1'
      - REDIS_PASSWORD=anycabledis # Redis password (optional, for security purposes)
    depends_on:
      - postgres_1
      - redis_1
    volumes:
      - ./data:/data

  postgres_1:
    image: postgres:latest
    environment:
      - POSTGRES_USER=anycable
      - POSTGRES_PASSWORD=anycabledb
      - POSTGRES_DB=anycable
    volumes:
      - ./postgres:/var/lib/postgresql/data

  redis_1:
    image: redis:latest
    command: --requirepass foobaredis # Set Redis password (optional)

  webapp: # Replace 'webapp' with the name of your Web application that will connect to AnyCable
    image: your-webapp-image:latest
    ports:
      - "8000:8000" # Port used by your Web application (default is 8000)
    depends_on:
      - anycable_gateway

# Uncomment the following if you need to use SSL/TLS with AnyCable Gateway
# anycable_gateway:
#   image: anycable/anycable-gateway:latest
#   command: -e 'LISTEN_ADDRESS=0.0.0.0' -e 'USE_TLS=1'
#   ports:
#     - "4000:4000" # Subscription cable server port
#   volumes:
#     - ./tls:/tls
#   environment:
#     # ... (other variables)
#     - SSL_CERTIFICATE=/tls/cert.pem
#     - SSL_KEY=/tls/key.pem