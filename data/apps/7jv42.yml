version: '3.7'

services:
  web:
    image: 'farmos/farmos:latest' # Use a specific tag if needed
    container_name: farmos_web
    ports:
      - "8000:80" # Map the container's port 80 to host port 8000
    environment:
      # Set the default values for configuration variables. These can be overridden by environment variables or command-line options when running `docker-compose up`.
      FARMOS__POSTgres__NAME: postgres
      FARMOS__POSTgres__USER: farmos
      FARMOS__POSTgres__PASSWORD: change_this_password
      FARMOS__SECRET_KEY: 'secret_key' # Change this to a secret key for your installation
      FARMOS__EMAIL_BACKEND: 'django.core.mail.backends.smtp.EmailBackend'
      FARMOS__EMAIL_HOST: 'localhost'
      FARMOS__EMAIL_PORT: 1025
      FARMOS__EMAIL_USE_TLS: 'true'
      # Additional environment variables can be set here for other services like API, TaskQueue, etc.
    volumes:
      - './data:/code/farmos/data' # Mount a volume for data persistence
      - './media:/code/farmos/media' # Mount a volume for media files
      - './log:/code/farmos/logs' # Mount a volume for log directory
    depends_on:
      - db
      - celery

  db:
    image: 'postgres:latest' # Use a specific tag if needed
    container_name: farmos_db
    environment:
      POSTGRES_DB: farmos
      POSTGRES_USER: farmos
      POSTGRES_PASSWORD: change_this_password
    volumes:
      - 'db_data:/var/lib/postgresql' # Use a named volume for data persistence

  celery:
    image: 'farmos/farmos-worker:latest' # Use a specific tag if needed
    container_name: farmos_celery
    environment:
      FARMOS__REDIS_URL: redis://redis:6379/0
    depends_on:
      - redis

  # Uncomment and configure the following services if you need them.
  # redis:
  #   image: 'redis:latest'
  #   volumes:
  #     - 'redis_data:/data'

  # redis_sentinel (if using Redis Sentinel for high availability):
  #   image: 'redis:latest'
  #   command: sentinel --parallel-tests
  #   volumes:
  #     - 'redis_sentinel_data:/data'

  # redis_master (if using Redis Sentinel and you have a master node):
  #   image: 'redis:latest'
  #   environment:
  #     REDIS_MASTER_PASSWORD: password
  #   volumes:
  #     - 'redis_master_data:/data'

networks:
  default:
    driver: bridge

volumes:
  db_data:
  media:
  log:
# Uncomment the following if you need to configure custom networks.
# networks:
#   farmos_net:
#     driver: bridge