version: '3.8'

services:
  automatisch-frontend:
    image: automatisch/frontend:latest
    ports:
      - "80:80" # Map the frontend service to port 80 on the host for HTTP access
    depends_on:
      - automatisch-backend
    networks:
      - automatisch-network

  automatisch-backend:
    image: automatisch/backend:latest
    ports:
      - "5000:5000" # Map the backend service to port 5000 on the host for a web API
    depends_on:
      - automatisch-database
    networks:
      - automatisch-network
    environment:
      DATABASE_URL: "postgres://automatisch-database:5432"

  automatisch-database:
    image: postgres:latest
    ports:
      - "5432:5432" # Map the database port to the host for direct access (optional)
    networks:
      - automatisch-network
    environment:
      POSTGRES_DB: automatisch
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password

  # Optional Redis service if Automatisch uses caching or message queuing
  automatisch-redis:
    image: redis:latest
    networks:
      - automatisch-network

  # Optional RabbitMQ service for message queue if needed by Automatisch
  automatisch-rabbitmq:
    image: rabbitmq:latest
    networks:
      - automatisch-network

networks:
  automatisch-network:
    driver: bridge

volumes:
  automatich-data:
    driver: local

# Optional configurations for persistent volumes or secrets
# For secrets, use `docker-compose -f docker-compose.yml -f docker-compose.secrets.yml up`
# secrets.yml example:
# version: 3.8
# services:
#   automatisch-backend:
#     environment:
#       SECRET_KEY:
#         file: ./secrets/secret_key.txt