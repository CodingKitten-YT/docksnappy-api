1 version: '3.8'
services:
  app:
    image: baserow/baserow:latest
    ports:
      - "80:80" # Map HTTP to port 80 on the host for access via http://localhost
      - "8000:8000" # Map the admin interface (Django's `admin` app) to port 8000 on the host
    environment:
      - BASEROW_SECRET_KEY=<your-secret-key> # Set your secret key for production environments
      - BASEROW_POSTGRES_HOST=db            # Database service name
      - BASEROW_POSTGRES_USER=baserow       # Database username
      - BASEROW_POSTGRES_PASSWORD=<your-password># Database password
      - BASEROW_POSTGRES_DB=baserow         # Database name
      - BASEROW_DATABASE_TYPE=postgresql     # Type of database used (e.g., postgresql, sqlite)
      - BASEROW_LANGUAGE_CODE=en            # Language code (e.g., en, fr)
      - BASEROW_TIME_ZONE=UTC                # Timezone to use
      - BASEROW_ALLOWED_HOSTS=localhost,[::1] # Allowed hosts
    volumes:
      - .:/code            # Mount the current directory to /code in the container for local development (optional)
      - baserow-media:/home/baserow/baserow/media  # Volume for media files
      - baserow-static:/home/baserow/baserow/static   # Volume for static files
    depends_on:
      - db
    command: gunicorn --workers=4 --bind unix:///run/gunicorn.sock app.wsgi:application

  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=baserow
      - POSTGRES_PASSWORD=<your-password> # Replace <your-password> with your actual database password
      - POSTGRES_DB=baserow
    volumes:
      - baserow-db:/var/lib/postgresql/data  # Volume for database data persistence

  redis:
    image: redis:latest

# The following services are optional, depending on your setup and needs.
# Uncomment and configure them accordingly.

  # worker:
  #   image: baserow/baserow-worker:latest
  #   environment:
  #     - BASEROW_SECRET_KEY=<your-secret-key>
  #     - BASEROW_REDIS_URL=redis://redis:6379
  #     - BASEROW_POSTGRES_URL=postgres://db:5432
  #   depends_on:
  #     - db
  #     - app

# The following volume declarations are for persisting data. Uncomment as needed.
volumes:
  baserow-media:
  baserow-static:
  baserow-db:

networks:
  default:
    driver: bridge

Remember to replace `<your-secret-key>` with a secret key for your installation and `<your-password>` with the database password you wish to use. Also, if you plan to use the worker service, uncomment and configure the `worker` service as well.

This `docker-compose.yml` file sets up Baserow with PostgreSQL as the database backend and Redis as the task queue backend. It also includes an optional worker service for running background tasks. The media and static volumes are used to persist user uploaded files and static assets, respectively.