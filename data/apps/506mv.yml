version: '3.8'

services:
  input-service:
    image: input/service:latest
    ports:
      - "8080:8080" # Expose the port your service runs on
    depends_on:
      - db
      # - cache
      # - message-queue
    environment:
      - DB_HOST=db
      # - CACHE_HOST=cache
      # - MESSAGE_QUEUE_HOST=message-queue
    command: ["sh", "-c", "trap 'kill 0' INT TERM; wait for unixsocket:* in /var/run/docker.sock; node src/index.js"]
    volumes:
      - ./src:/app/src
      - ./node_modules:/app/node_modules

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: inputdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - input-db-data:/var/lib/postgresql/data

  # cache (optional, if you need Redis)
  cache:
    image: redis:6.2

  # message-queue (optional, if you need a message queue like RabbitMQ)
  message-queue:
    image: rabbitmq:3.8.14-management
    ports:
      - "5672:5672"
      - "15672:15672"
      - "4369:4369" # For web management UI
      - "8080:8080": # Management UI interface container port, if you want to access it externally
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASSWORD: guest

volumes:
  input-db-data:
    driver: local