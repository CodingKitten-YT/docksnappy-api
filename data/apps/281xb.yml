version: '3.8'

services:
  webapp:
    image: "plugnmeet/plugnmeet:latest" # Use the official image from Docker Hub
    ports:
      - "5000:5000" # Expose the port PlugNMeet uses, typically 5000 for the web app
    environment:
      - REDIS_URL=redis://redis:6379/1
      # Additional environment variables can be set here as needed
    depends_on:
      - redis

  redis:
    image: "redis:6-alpine"
    command: "redis-server --save /var/lib/redis/dump.rdb"
    volumes:
      - "./data/redis:/var/lib/redis" # Persist Redis data to a volume (optional but recommended)

  db:
    image: "postgres:13"
    environment:
      - POSTGRES_DB=plugnmeet
      - POSTGRES_USER=plugnmeet
      - POSTGRES_PASSWORD=yourpassword
    volumes:
      - "./data/db:/var/lib/postgresql" # Persist PostgreSQL data to a volume (optional but recommended)

  worker:
    image: "plugnmeet/plugnmeet-worker:latest" # Use the official worker image from Docker Hub
    environment:
      - BROKER_URL=pyamqp://rabbitmq:5672/
      - QUEUE_NAME=tasks
    depends_on:
      - rabbitmq

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "15672:15672" # Management UI port
      - "5672:5672"   # RabbitMQ server port
    command: "rabbitmq-server --enable_pluggable_vhosts true"
    volumes:
      - "./data/rabbitmq:/var/lib/rabbitmq" # Persist RabbitMQ data to a volume (optional but recommended)

  nginx-proxy:
    image: "jwilder/nginx-proxy":2.4.0-stable
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./data/nginx:/etc/nginx"
    depends_on:
      - webapp

  letsencrypt-nginx-proxy-companion:
    image: "jwilder/letsencrypt-nginx-proxy-companion":2.4.0-stable
    depends_on:
      - nginx-proxy

networks:
  default:
    external:
      name: mynetwork # Optional, if you want to use an existing network or define a custom one