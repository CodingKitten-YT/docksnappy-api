version: '3.8'
services:
  # AzuraCast Core Service
  azuracast:
    image: 'linuxserver.io/azuracast:latest' # Use the official image or a specific tag/version
    container_name: azuracast
    ports:
      - "80:80" # HTTP
      - "443:443" # HTTPS (requires SSL setup)
      - "5349:5349" # Web Admin Interface
    volumes:
      - '/path/to/your/azuracast_data:/data' # Replace with your local path to persist data
      - '/path/to/your/radiocast-cfg.json:/config/radiocast-cfg.json' # Optional: if you have a custom cfg.json
      - '/path/to/your/radiocast-key.pem:/config/radiocat-key.pem' # Optional: if you have a custom key.pem for HTTPS
      - '/path/to/your/radiocast-cert.pem:/config/radiocast-cert.pem' # Optional: if you have a custom cert.pem for HTTPS
    environment:
      - 'TZ=Europe/London' # Set your timezone (change to your timezone)
      - 'SERVER_PROTOCOL=https' # Use http or https based on your setup
      - 'SERVER_HOSTNAME=yourdomain.com' # The domain name for your AzuraCast instance
      - 'SERVER_EMAIL=admin@yourdomain.com' # Email to be used as admin contact
      - 'SERVER_ADMINPASSWORD=very_secret_password' # Admin account password
      - 'SERVER_DBTYPE=mysql' # Database type (mysql or postgres)
      - 'SERVER_MYSQLHOSTNAME=mysql' # MySQL service name if using a separate container for the database
      - 'SERVER_MYSQLUSER=azuracast' # MySQL username
      - 'SERVER_MYSQLPASSWORD=db_secret_password' # MySQL password
      - 'SERVER_MYSQLDATABASE=azuracast' # MySQL database name
    networks:
      - azuracast-network
    restart: unless-stopped

  # MySQL Database (if not using an external database service)
  mysql:
    image: 'mysql:5.7'
    container_name: mysql
    volumes:
      - '/path/to/your/mysql_data:/var/lib/mysql' # Replace with your local path to persist data
    environment:
      - 'MYSQL_ROOT_PASSWORD=root_secret_password' # Root password for MySQL
      - 'MYSQL_DATABASE=azuracast' # Database name (same as SERVER_MYSQLDATABASE in AzuraCast service)
      - 'MYSQL_USER=azuracast' # MySQL username (same as SERVER_MYSQLUSER in AzuraCast service)
      - 'MYSQL_PASSWORD=db_secret_password' # MySQL password (same as SERVER_MYSQLPASSWORD in AzuraCast service)
    networks:
      - azuracast-network
    restart: unless-stopped

# Optional NGINX Ingress Controller if using Docker Swarm with Kubernetes features
nginx:
  image: 'k8s.gcr.io/kubernetes-slash-nginx-slice/nginx-ingress-controller:stable-2.1.0'
  ports:
    - '80:80'
    - '443:443'
  annotations:
    # Required for SSL on ingress
    traefik.enable=true
    traefik.ingressProgram.router.rule = "Host(`yourdomain.com`).tls"`
  networks:
    - azuracast-network

# Optional Traefik Reverse Proxy if using Docker Swarm with Kubernetes features
traefik:
  image: 'traefik:v2.5'
  ports:
    - '80:80'
    - '443:443'
  volumes:
    - '/var/run/docker.sock:/var/run/docker.sock:ro'
    - '/path/to/your/traefik_acme.json:/acme.json' # Optional: if you want to persist ACME configuration
  command: --api.insecure=true
  networks:
    - azuracast-network

networks:
  azuracast-network:
    driver: bridge