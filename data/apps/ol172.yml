version: '3.7'

services:
  firefly_iii:
    image: fireflyiii/firefly-iii:latest
    container_name: firefly-iii
    restart: unless-stopped
    ports:
      - "8080:80" # HTTP port, change as needed
      - "443:443"  # HTTPS port, requires a SSL certificate and the appropriate env vars set
    environment:
      TZ: "Your/Timezone" # e.g., Europe/Amsterdam
      BB_DATABASE_HOST: "db"
      DB_SERVER_ROOT_PASSWORD: "yourpassword" # Set a password for MySQL root user
      APP_SECRET: "a very long and secret key for your application"
      APP_DOMAIN: "example.com" # Your domain or subdomain
      APP_ROUTER_ADMINS: "admin@example.com" # Comma separated list of admin users to invite via CLI after setup
    volumes:
      - "./config:/code/config"
      - "./data:/code/data"
    networks:
      - firefly-network

  db:
    image: postgres:13
    container_name: firefly-iii-db
    environment:
      POSTGRES_DB: firefly_iii
      POSTGRES_USER: firefly_iii
      POSTGRES_PASSWORD: yourpassword # Must match DB_SERVER_ROOT_PASSWORD for initial root access
    volumes:
      - "./data/db:/var/lib/postgresql"
    networks:
      - firefly-network

  nginx_proxy:
    image: jwilder/nginx-proxy:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - firefly_iii
    volumes:
      - "./data/nginx:/etc/nginx/conf.d"
      - "/var/run/docker.sock:/tmp/docker.sock:ro" # Required for Let's Encrypt and Docker Swarm mode
    networks:
      - firefly-network

  letsencrypt:
    image: jrcassancio/letsencrypt-nginx-proxy-companion:latest
    container_name: letsencrypt
    depends_on:
      - nginx_proxy
    volumes:
      - "./data/le:/etc/letsencrypt"
    environment:
      EMAIL: your-email@example.com # Email where certificates will be sent
    networks:
      - firefly-network

networks:
  firefly-network:
    driver: bridge