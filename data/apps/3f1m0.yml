version: '3.8'

services:
  web:
    image: christmascommunity/web:latest
    build:
      context: .
      dockerfile: Dockerfile.web
    ports:
      - "8000:80"
    depends_on:
      - db
      #- cache
      #- queue
    environment:
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=secret
      - DB_NAME=community_db
    volumes:
      - .:/app
      - web-static:/app/static
    command: python manage.py runserver 0.0.0.0:80

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=community_db
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root"]
      timeout: 10s
      retries: 5

  # cache:
  #   image: redis:latest
  #   command: redis-server --port 6379

  # queue:
  #   image: rabbitmq:3.8-management
  #   environment:
  #     - RABBITMQ_USER=user
  #     - RABBITMQ_PASSWORD=password
  #     - RABBITMQ_VHOST=vhost
  #   volumes:
  #     - rabbitmq-data:/var/lib/rabbitmq

volumes:
  web-static:
  db-data:
  rabbitmq-data:
    external: true # Uncomment if using RabbitMQ
  redis-data:
    external: true # Uncomment if using Redis

networks:
  default:
    driver: bridge

# Optional configurations like logging, resource limits, etc.
# Add these under the "services" or at the root level as needed.